name: Pull Request Checks

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches: [main, develop]

jobs:
  pr-validation:
    name: PR Validation
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Validate PR title
      uses: amannn/action-semantic-pull-request@v5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        types: |
          feat
          fix
          docs
          style
          refactor
          perf
          test
          build
          ci
          chore
          revert
        requireScope: false
        disallowScopes: |
          release
        subjectPattern: ^(?![A-Z]).+$
        subjectPatternError: |
          The subject "{subject}" found in the pull request title "{title}"
          didn't match the configured pattern. Please ensure that the subject
          doesn't start with an uppercase character.

    - name: Check for breaking changes
      run: |
        if git log --format=%B ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }} | grep -q "BREAKING CHANGE"; then
          echo "⚠️ This PR contains breaking changes"
          echo "breaking_changes=true" >> $GITHUB_OUTPUT
        else
          echo "✅ No breaking changes detected"
          echo "breaking_changes=false" >> $GITHUB_OUTPUT
        fi
      id: breaking_changes

    - name: Check file changes
      uses: dorny/paths-filter@v2
      id: changes
      with:
        filters: |
          backend:
            - 'backend/**'
          frontend:
            - 'frontend/**'
          docker:
            - '**/Dockerfile*'
            - 'docker-compose*.yml'
          docs:
            - '**/*.md'
            - 'docs/**'
          github:
            - '.github/**'

    - name: Comment on PR with change summary
      uses: actions/github-script@v6
      with:
        script: |
          const changes = ${{ toJSON(steps.changes.outputs) }};
          const breakingChanges = '${{ steps.breaking_changes.outputs.breaking_changes }}' === 'true';
          
          let comment = '## 🔍 PR Analysis\n\n';
          comment += '### Changed Components:\n';
          
          if (changes.backend === 'true') comment += '- 🐍 Backend (Python/FastAPI)\n';
          if (changes.frontend === 'true') comment += '- ⚛️ Frontend (React/TypeScript)\n';
          if (changes.docker === 'true') comment += '- 🐳 Docker configuration\n';
          if (changes.docs === 'true') comment += '- 📚 Documentation\n';
          if (changes.github === 'true') comment += '- 🔧 GitHub workflows\n';
          
          if (breakingChanges) {
            comment += '\n### ⚠️ Breaking Changes Detected\n';
            comment += 'This PR contains breaking changes. Please ensure:\n';
            comment += '- [ ] Version bump is appropriate\n';
            comment += '- [ ] Migration guide is provided\n';
            comment += '- [ ] Stakeholders are notified\n';
          }
          
          comment += '\n### 🧪 Automated Checks\n';
          comment += '- [ ] Code quality checks\n';
          comment += '- [ ] Security scans\n';
          comment += '- [ ] Test coverage\n';
          comment += '- [ ] Build verification\n';
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

  size-check:
    name: Bundle Size Check
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.changed_files, 'frontend/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: |
        cd frontend
        npm ci

    - name: Build and analyze bundle
      run: |
        cd frontend
        npm run build
        npx bundlesize

    - name: Comment bundle size
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          // This would typically read from bundlesize output
          // For now, we'll create a placeholder comment
          const comment = `## 📦 Bundle Size Analysis
          
          The bundle size analysis will be displayed here once bundlesize is properly configured.
          
          - Main bundle: TBD
          - Vendor bundle: TBD
          - Total size: TBD
          `;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

  dependency-check:
    name: Dependency Security Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Check Python dependencies
      run: |
        cd backend
        pip install safety
        safety check --json --output safety-report.json || true
        
        if [ -s safety-report.json ]; then
          echo "⚠️ Python security vulnerabilities found"
          cat safety-report.json
        else
          echo "✅ No Python security vulnerabilities found"
        fi

    - name: Check Node.js dependencies
      run: |
        cd frontend
        npm audit --audit-level=moderate --json > npm-audit.json || true
        
        if [ -s npm-audit.json ] && [ "$(cat npm-audit.json | jq '.metadata.vulnerabilities.total')" != "0" ]; then
          echo "⚠️ Node.js security vulnerabilities found"
          npm audit --audit-level=moderate
        else
          echo "✅ No Node.js security vulnerabilities found"
        fi

  license-check:
    name: License Compliance Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install license checker
      run: npm install -g license-checker

    - name: Check frontend licenses
      run: |
        cd frontend
        license-checker --onlyAllow 'MIT;Apache-2.0;BSD-2-Clause;BSD-3-Clause;ISC;0BSD' --json > licenses.json || true
        
        if [ -s licenses.json ]; then
          echo "✅ License check completed"
          echo "licenses_ok=true" >> $GITHUB_OUTPUT
        else
          echo "⚠️ License issues found"
          echo "licenses_ok=false" >> $GITHUB_OUTPUT
        fi
      id: license_check

    - name: Upload license report
      uses: actions/upload-artifact@v4
      with:
        name: license-report
        path: frontend/licenses.json
        retention-days: 30

  accessibility-check:
    name: Accessibility Check
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.changed_files, 'frontend/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: |
        cd frontend
        npm ci

    - name: Build application
      run: |
        cd frontend
        npm run build

    - name: Run accessibility tests
      run: |
        cd frontend
        npx @axe-core/cli dist/ --tags wcag2a,wcag2aa --reporter json --output-file axe-report.json || true

    - name: Upload accessibility report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: accessibility-report
        path: frontend/axe-report.json
        retention-days: 30

  pr-summary:
    name: PR Summary
    runs-on: ubuntu-latest
    needs: [pr-validation, size-check, dependency-check, license-check, accessibility-check]
    if: always()
    
    steps:
    - name: Create PR summary
      uses: actions/github-script@v6
      with:
        script: |
          const results = {
            validation: '${{ needs.pr-validation.result }}',
            size_check: '${{ needs.size-check.result }}',
            dependency_check: '${{ needs.dependency-check.result }}',
            license_check: '${{ needs.license-check.result }}',
            accessibility_check: '${{ needs.accessibility-check.result }}'
          };
          
          let summary = '## 📋 PR Check Summary\n\n';
          
          for (const [check, result] of Object.entries(results)) {
            const emoji = result === 'success' ? '✅' : result === 'failure' ? '❌' : result === 'skipped' ? '⏭️' : '⚠️';
            const name = check.replace(/_/g, ' ').replace(/\b\w/g, l => l.toUpperCase());
            summary += `${emoji} **${name}**: ${result}\n`;
          }
          
          summary += '\n---\n';
          summary += '*This summary is automatically generated by GitHub Actions*';
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: summary
          });